4.1.1. The <presence> element


   PIDF elements are associated with the XML namespace name
   'urn:ietf:params:xml:ns:pidf', declared using an xmlns attribute, per
   [XML-NS].  The namespace may be a default namespace, or may be
   associated with some namespace prefix (see section 4.2.2 for
   examples).

   The root of an "application/pidf+xml" object is a <presence> element
   associated with the presence information namespace.  This contains
   any number (including 0) of <tuple> elements, followed by any number
   (including 0) of <note> elements, followed by any number of OPTIONAL
   extension elements from other namespaces.

   The <presence> element MUST have an 'entity' attribute.  The value of
   the 'entity' attribute is the 'pres' URL of the PRESENTITY publishing
   this presence document.

   The <presence> element MUST contain a namespace declaration ('xmlns')
   to indicate the namespace on which the presence document is based.
   The presence document compliant to this specification MUST have the
   namespace 'urn:ietf:params:xml:ns:pidf:'.




Sugano, et al.              Standards Track                     [Page 6]

 
RFC 3863            Presence Information Data Format         August 2004


   It MAY contain other namespace declarations for the extensions used
   in the presence XML document.

4.1.2. The <tuple> element


   The <tuple> element carries a PRESENCE TUPLE, consisting of a
   mandatory <status> element, followed by any number of OPTIONAL
   extension elements (possibly from other namespaces), followed by an
   OPTIONAL <contact> element, followed by any number of OPTIONAL <note>
   elements, followed by an OPTIONAL <timestamp> element.

   Tuples provide a way of segmenting presence information.  Protocols
   or applications may choose to segment the presence information
   associated with a presentity for any number of reasons - for example,
   because components of the full presence information for a presentity
   have come from distinct devices or different applications on the same
   device, or have been generated at different times.  Tuples should be
   preferred over other manners of segmenting presence information such
   as creating multiple PIDF instances.

   The <tuple> element MUST contain an 'id' attribute which is used to
   distinguish this tuple from other tuples in the same PRESENTITY.  The
   value of an 'id' attribute MUST be unique within 'id' attribute
   values of other tuples for the same PRESENTITY.  An 'id' value is
   used by applications processing the presence document to identify the
   corresponding tuple in the previously acquired PRESENCE INFORMATION
   of the same PRESENTITY.  The value of the 'id' attribute is an
   arbitrary string, and has no significance beyond providing a means to
   distinguish <tuple> values, as noted above.

   The <contact> element is OPTIONAL because a PRESENTITY might need to
   hide its COMMUNICATION ADDRESS or there might be tuples not related
   to any COMMUNICATION MEANS.  Tuples that contain a <basic> status
   element SHOULD contain a <contact> address.  Tuples MAY contain
   conflicting presence status - one <tuple> might provide a <basic>
   <status> of OPEN, and another <tuple> in the same PIDF could contain
   a <basic> <status> of CLOSED, even if they both contain the same
   <contact> address.

   The manner in which segmented presence information is understood by
   the WATCHER USER AGENT is highly dependent on the capabilities of the
   WATCHER USER AGENT and the presence application in question.  In the
   absence of any application-specific or protocol-specific
   understanding of the meaning of tuples, WATCHER USER AGENTS MAY obey
   the following guidelines.  WATCHER USER AGENTS should note which
   tuples in the PIDF have changed their state since the last





Sugano, et al.              Standards Track                     [Page 7]

 
RFC 3863            Presence Information Data Format         August 2004


   notification by correlating the 'id' of each <tuple> with those
   received in previous notifications and comparing both <status> values
   and <timestamp> elements in the tuples, if any are present.

4.1.3. The <status> element


   The <status> element contains one OPTIONAL <basic> element, followed
   by any number of OPTIONAL extension elements (possibly from other
   namespaces), under the restriction that at least one child element
   appears in the <status> element.  These children elements of <status>
   contain status values of this tuple.  By allowing multiple status
   values in a single <tuple> element, different types of status values,
   e.g., reachability and location, can be represented by a <tuple>.
   See Section 4.3 for an example with multiple status values.

   This memo only defines the <basic> status value element.  Other
   status values may be included using the standard extensibility
   framework (see Section 4.2.4).  Applications encountering
   unrecognized elements within <status> may ignore them, unless they
   carry a mustUnderstand="true" or mustUnderstand="1" attribute (see
   section 4.2.3).

   Note that, while the <status> element MUST have at least one status
   value element, this status value might not be the <basic> element.

4.1.4. The <basic> element


   The <basic> element contains one of the following strings: "open" or
   "closed".

   The values "open" and "closed" indicate availability to receive
   INSTANT MESSAGES if the <tuple> is for an instant messaging address.
   They also indicate general availability for other communication
   means, but this memo does not specify these in detail.

   open: In the context of INSTANT MESSAGES, this value means that the
      associated <contact> element, if any, corresponds to an INSTANT
      INBOX that is ready to accept an INSTANT MESSAGE.

   closed: In the context of INSTANT MESSAGES, this value means that
      the associated <contact> element, if any, corresponds to an
      INSTANT INBOX that is unable to accept an INSTANT MESSAGE.

4.1.5. The <contact> element


   The <contact> element contains a URL of the contact address.  It
   optionally has a 'priority' attribute, whose value means a relative
   priority of this contact address over the others.  The value of the



Sugano, et al.              Standards Track                     [Page 8]

 
RFC 3863            Presence Information Data Format         August 2004


   attribute MUST be a decimal number between 0 and 1 inclusive with at
   most 3 digits after the decimal point.  Higher values indicate higher
   priority.  Examples of priority values are 0, 0.021, 0.5, 1.00. If
   the 'priority' attribute is omitted, applications MUST assign the
   contact address the lowest priority.  If the 'priority' value is out
   of the range, applications just SHOULD ignore the value and process
   it as if the attribute was not present.

   Applications SHOULD handle contacts with a higher priority as they
   have precedence over those with lower priorities.  How they are
   actually treated is beyond this specification.  Also, how to handle
   contacts with the same priority is up to implementations.

4.1.6. The <note> element


   The <note> element contains a string value, which is usually used for
   a human readable comment.  A <note> element MAY appear as a child
   element of <presence> or as a child element of the <tuple> element.
   In the former case the comment is about the PRESENTITY and in the
   latter case the comment is regarding the particular tuple.

   Note that, wherever it appears, a <note> element SHOULD NOT be used,
   and interpreted, as a non-interoperable substitute for status of its
   parent element.

   The <note> element SHOULD have a special attribute 'xml:lang' to
   specify the language used in the contents of this element as defined
   in Section 2.12 of [XML].  The value of this attribute is the
   language identifier as defined by [RFC3066].  It MAY be omitted when
   the language used is implied by the larger context such as the
   encoding information of the contents, such as an xml:lang attribute
   on an enclosing XML element, or a Content-language header [RFC3282]
   on an enclosing MIME wrapper.

4.1.7. The <timestamp> element


   The <timestamp> element contains a string indicating the date and
   time of the status change of this tuple.  The value of this element
   MUST follow the IMPP datetime format [RFC3339].  Timestamps that
   contain 'T' or 'Z' MUST use the capitalized forms.

   As a security measure, the <timestamp> element SHOULD be included in
   all tuples unless the exact time of the status change cannot be
   determined.  For security guidelines for watchers receiving presence
   information with timestamps, see the Security Considerations.

   A PRESENTITY MUST NOT generate successive <presence> elements
   containing the same timestamp.
